{"version":3,"sources":["App.styles.jsx","components/Statisctics/Statisctics.styles.jsx","components/Statisctics/Statisctics.jsx","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Notification/Notification.styles.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["Container","List","Item","Statisctics","good","neutral","bad","total","positivePercentage","ButtonBox","styled","div","Button","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","name","Title","h1","Wrapper","Section","title","children","p","Notification","message","App","state","onLeaveFeedbackButton","e","target","setState","this","PositiveFeedback","countTotalFeedback","Math","round","Object","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAEO,IAAMA,EAAS,uJCAf,IAAMC,EAAI,2KAUJC,EAAI,yK,OCRF,SAASC,EAAT,GAMX,IALAC,EAKD,EALCA,KACAC,EAID,EAJCA,QACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,MACAC,EACD,EADCA,mBAEA,OACI,eAACP,EAAD,WACI,eAACC,EAAD,oBAAcE,KACd,eAACF,EAAD,uBAAiBG,KACjB,eAACH,EAAD,mBAAaI,KACb,eAACJ,EAAD,qBAAeK,KACf,eAACL,EAAD,iCAA0BM,EAA1B,U,0BCfCC,EAAYC,IAAOC,IAAV,kGAMTC,EAASF,IAAOG,OAAV,waCJJ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,cAACP,EAAD,UACGM,EAAQE,KAAI,SAACC,GAAD,OACX,cAACN,EAAD,CAEEO,KAAK,SACLC,QAASJ,EACTK,KAAMH,EAJR,SAMGA,GALIA,QCNR,I,EAAMI,EAAQZ,IAAOa,GAAV,8IAOLC,EAAUd,IAAOC,IAAV,6CCNL,SAASc,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,eAACH,EAAD,WACI,cAACF,EAAD,UAAQI,IACPC,KCNN,IAAML,EAAQZ,IAAOkB,EAAV,mDCAH,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OAAO,cAAC,EAAD,UAASA,I,ICMCC,E,4MACjBC,MAAQ,CACJ5B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAcT2B,sBAAwB,SAACC,GACrB,IAAMC,EAASD,EAAEC,OACjB,EAAKC,SAAL,eACKD,EAAOd,KAAO,EAAKW,MAAMG,EAAOd,MAAQ,K,wDAfjD,WACI,MAA+BgB,KAAKL,MAEpC,OAFA,EAAQ5B,KAAR,EAAcC,QAAd,EAAuBC,M,6CAI3B,WACI,IAEMgC,EAAoB,IAFTD,KAAKL,MAAd5B,KACMiC,KAAKE,qBAGnB,OAAOC,KAAKC,MAAMH,K,oBAStB,WACI,MAA+BD,KAAKL,MAA5B5B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACI,eAACN,EAAD,WACI,cAACyB,EAAD,CAASC,MAAM,wBAAf,SACN,cAACZ,EAAD,CACEC,QAAS2B,OAAOC,KAAKN,KAAKL,OAC1BhB,gBAAiBqB,KAAKJ,0BAIlB,cAACR,EAAD,CAASC,MAAM,cAAf,SACKW,KAAKE,qBAAuB,EACzB,cAACpC,EAAD,CACIC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO8B,KAAKE,qBACZ/B,mBAAoB6B,KAAKO,oCAG7B,cAACf,EAAD,CAAcC,QAAQ,+B,GA9Cbe,aCHjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8f316f02.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro'\n\nexport const Container = styled.div`\n width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`","import styled from '@emotion/styled/macro'\n\nexport const List = styled.ul`\n display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin: 0;\n  padding: 0;\n`;\n\n\nexport const Item = styled.li`\n\nfont-weight: 500;\nfont-size: 20px;\nline-height: 1.14;\nletter-spacing: 0.03em;\nmargin-bottom: 10px;\nlist-style: none\n`;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { List, Item } from \"./Statisctics.styles\";\n\nexport default function Statisctics({\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage,\n}) {\n    return (\n        <List>\n            <Item>Good: { good}</Item>\n            <Item>Neutral: { neutral}</Item>\n            <Item>Bad: { bad}</Item>\n            <Item>Total: { total}</Item>\n            <Item>Positive feedback: {positivePercentage }%</Item>\n    </List>\n)\n};\nStatisctics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n}","import styled from '@emotion/styled';\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n\n margin-right: 10px;\n  padding: 10px;\n\n  font-style: normal;\n  font-weight: normal;\n  font-size: 24px;\n\n  cursor: pointer;\n  outline: none;\n  border-radius: 5px;\n  background: white;\n  \n  box-shadow: 1px 2px 2px 0 rgb(0 0 0 / 0.5);\n  transition: box-shadow 250ms linear;\n  &:hover {\n   background-color:rgb(44, 154, 243);\n   box-shadow: 2px 5px 2px 0 rgb(0 0 0 / 0.5); \n  }\n  `","import { ButtonBox, Button } from './FeedbackOptions.styles';\nimport PropTypes from 'prop-types';\n\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ButtonBox>\n      {options.map((option) => (\n        <Button\n          key={option}\n          type=\"button\"\n          onClick={onLeaveFeedback}\n          name={option}\n        >\n          {option}\n        </Button>\n      ))}\n    </ButtonBox>\n  )\n}\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n}","import styled from '@emotion/styled';\n\n\nexport const Title = styled.h1`\n  font-weight: bold;\n  font-size: 40px;\n  line-height: 1.19;\n  text-align: center;\n  letter-spacing: 0.03em;\n`;\nexport const Wrapper = styled.div`\npadding-top: 18px`;","\nimport PropTypes from \"prop-types\";\nimport { Title, Wrapper } from \"./Section.styles\";\n\nexport default function Section({ title, children }) {\n    return (\n        <Wrapper>\n            <Title>{title}</Title>\n            {children}\n      </Wrapper>\n    )\n};\nSection.propTypes = {\n    title: PropTypes.string,\n};","import styled from '@emotion/styled'\n\nexport const Title = styled.p`\ntext-align: center;\n\n`","import PropTypes from 'prop-types';\nimport {Title} from './Notification.styles'\nexport default function Notification({ message }) {\n    return <Title>{ message}</Title>\n}\nNotification.propTypes={\n    message: PropTypes.string.isRequired,\n}","\nimport {Component} from \"react\";\nimport { Container } from \"./App.styles\";\n\nimport Statisctics from \"./components/Statisctics/Statisctics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\"\nimport Section from \"./components/Section/Section\"\nimport Notification from \"./components/Notification/Notification\";\n\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n    countTotalFeedback() {\n        const { good, neutral, bad } = this.state;\n        const total = (good + neutral + bad);\n        return total;\n    }\n    countPositiveFeedbackPercentage() {\n        const { good } = this.state;\n        const total = this.countTotalFeedback();\n        const PositiveFeedback = (100 * good) / total;\n\n        return Math.round(PositiveFeedback);\n    }\n    onLeaveFeedbackButton = (e) => {\n        const target = e.target;\n        this.setState({\n            [target.name]: this.state[target.name] + 1,\n        })\n    }\n\n    render() {\n        const { good, neutral, bad } = this.state;\n        return (\n            <Container>\n                <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.onLeaveFeedbackButton}\n          />\n                </Section>\n                \n                <Section title=\"Statisctics\">\n                    {this.countTotalFeedback() > 0 ? (\n                        <Statisctics\n                            good={good}\n                            neutral={neutral}\n                            bad={bad}\n                            total={this.countTotalFeedback()}\n                            positivePercentage={this.countPositiveFeedbackPercentage()}\n                        />\n                    ) : (\n                        <Notification message=\"No feedback given\" />\n                    )\n                }\n                </Section>\n            </Container>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}